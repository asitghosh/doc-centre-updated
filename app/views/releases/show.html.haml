.container.twelve-three
  = render "release_head_w_search"
  .left-col.channel_color_headlines
    .release_overview
      = render 'release_overview'
    .release_content
      - unless @release.marketplace_improvements_content.blank?
        #marketplace_improvements.spy_this
          %h3.h5.all-caps.nine.section_separator Marketplace Improvements
          = raw @release.marketplace_improvements_content

      - unless @release.api_improvements_content.blank?
        #api_improvements.spy_this
          %h3.h5.all-caps.nine.section_separator Marketplace API Improvements
          = raw @release.api_improvements_content

      - unless @release.devcenter_improvements_content.blank?
        #devcenter_improvements.spy_this
          %h3.h5.all-caps.nine.section_separator Developer Center Improvements
          = raw @release.devcenter_improvements_content

      - unless @release.manager_improvements_content.blank?
        #manager_improvements.spy_this
          %h3.h5.all-caps.nine.section_separator Marketplace Manager Improvements
          = raw @release.manager_improvements_content

      - unless @release.corporate_portal_content.blank?
        #corporate_portal.spy_this
          %h3.h5.all-caps.nine.section_separator Corporate Portal
          = raw @release.corporate_portal_content

      - unless @specific_content.blank?
        #channel_specific
          - @specific_content.each do |channel_partner, content|
            - if channel_partner == current_user.channel_partner.name or current_user.can_see_all?
              .spy_this{:id => channel_partner.parameterize}
                %h3.h5.all-caps.nine.section_separator= channel_partner
                - content.each do |c|
                  = raw c.content
      - unless @release.features.blank?
        #appended_features.spy_this
          %h3.h5.all-caps.nine.section_separator Appended Features
          %ul.list-reset
            - @release.features.each do |feature|
              %header
                %h4= feature.title
              = raw feature.summary
              = raw feature.content
      - unless @release_hotfixes.blank?
        #hotfixes
          - @release_hotfixes.each do |hotfix|
            .spy_this{:id => "hotfix#{hotfix.number.gsub(".", "_")}"}
              %h3.h5.all-caps.nine.section_separator
                Hotfix #{hotfix.number}
                - if hotfix.draft?
                  (draft)
              = raw hotfix.content
              - hotfix.contents_for(current_user).each do |channel_partner, content|
                - if current_user.can_see_all?
                  %h4.channel_color
                    Updates for #{channel_partner}
                - content.each do |c|
                  = raw c.content

  / /left-col
  %aside.right-col
    .fix_wrap
      - if !@subsection_headings.blank? or @release.notes_for_user?(current_user) or !@release_hotfixes.blank?
        %nav#jumpnav
          %h2.h6.all-caps Contents
          %ul.side-nav.jumpnav.nav.right
            - @subsection_headings.each do |k, v|
              %li
                %a.channel_color_border{:href => "##{"#{k.parameterize}"}"}= "#{v[:name]}"
            - unless @specific_content.blank?
              - @specific_content.each do |channel_partner, content|
                - if channel_partner == current_user.channel_partner.name or current_user.can_see_all?
                  %li
                    %a.channel_color_border{:href => "##{channel_partner.parameterize}"}= channel_partner
            - unless @release.features.blank?
              %li
                %a.channel_color_border{:href => "#appended_features"} Appended Features
            - unless @release_hotfixes.blank?
              - @release_hotfixes.each do |hotfix|
                %li
                  %a.channel_color_border{:href => "#hotfix#{hotfix.number.gsub(".", "_")}"}
                    Hotfix #{hotfix.number}

      .download_link
        %a{ :href => release_path(@release, :format => :pdf), :class => "no_decoration all-caps download channel_color js-download-pdf pdf-status-default" }
          %ul.download_messages
            %li.default
              %span.prefix.icon-print
              %span.content= t('pdf', scope: :releases, release_number: @release.title)
            %li.generating
              %span.prefix.spinner-small
              %span.content= t('generating', scope: :pdf )
            %li.complete
              %span.prefix.icon-download
              %span.content= t('complete', scope: :pdf )
            %li.error
              %span.prefix.icon-close
              %span.content= t('error', scope: :pdf )
